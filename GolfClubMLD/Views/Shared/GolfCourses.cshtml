@model PagedList.IPagedList<GolfClubMLD.Models.GolfCourseBO>
@using GolfClubMLD.Models
@using PagedList.Mvc
@using System
<form asp-controller="Home" asp-action="Index" method="get">
    <input type="text" name="SearchString" />
    <input type="submit" value="Pretrazi">
</form>
<form asp-controller="Home" asp-action="Index" method="get">
    <select name="SearchString">
        @{
            var courseTypes = (List<CourseTypeBO>)ViewData["types"];
            foreach (var ct in courseTypes)
            {
                if (ViewData["CourseTypeName"] != null && ViewData["CourseTypeName"].ToString() == ct.Name)
                {
                    <option value="@ct.Id" selected>@ct.Name</option>
                }
                else
                {
                    <option value="@ct.Id">@ct.Name</option>
                }
            }


        }
    </select>
    <input type="submit" value="Tip">
</form>
<p>
    @if (ViewData["CourseTypeName"] != null)
    {
        @ViewData["CourseTypeName"];
    }
</p>
<table class="table">
    @if (Model != null)
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.Hidden(item.Id.ToString())
                </td>
                <td>

                    @Html.ActionLink(item.Name.ToString(), "Details", "Home", routeValues: new { id = item.Id }, htmlAttributes: new { })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PicUrl)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseType.Name)
                </td>
            </tr>
        }
    }
    else
    {
        <p>Nema terena</p>
    }
</table>
<br />
Strana @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) od @Model.PageCount
@{ 
    string searchString = "";
    if (ViewData["searchString"] != null)
    {
        searchString = ViewData["searchString"].ToString();
    }
    @Html.PagedListPager(Model, page => Url.Action("Index", routeValues: new { searchString, page}))
}